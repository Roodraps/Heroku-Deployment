 # your workflow name.
 name: Deploy to heroku.

 # Run workflow on every push to main branch.
 on:
  push:
    branches: [main]

# your workflows jobs.
jobs:
  build:
  runs-on: ubuntu-latest
  steps:
  # Check-out your repository.
  - name: checkout
  uses: actions/checkout@v2
    

### Important part ###

        name: Build,Push and Release a Docker container to Heroku. # Your custom step name
        uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is)
        with:
          # Below you must provide variables for your Heroku app.

          # The email address assosiated with your Heroku account .
          # If you do not want to use repository secrets (which is recommended) you can do:
          # email: my.email@example.com
          email: ${{ secrets.HEROKU_EMAIL }}

          # Heroku API key assosiated with provided user's email.
          # Api Key is available under your Heroku account setting.
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}

          # Name of the heroku application to which the build is to be sent.
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

          #(optional, default: "./")
          # Dockerfile directory.
          #for example, if you have  a Dockerfile in the root of your project , leave it as follows:
          dockerfile_directory: ./

          # (optional,default: "Dockerfile")
          # Dockerfile name.
          dockerfile_name: Dockerfile

          # (Optional, default: "")
          # Additional options of docker build command.
          docker_options: "--no-cache"

          # (optional, default: "web")
          # select the process type for which you want the docker container to be uploaded.
          # By default, this argument is set to "web"
          # for more information look at https://devcenter.heroku.com/articles/process-model
          process_type: web


